version: '3'

services:
  spark-master:
    build: .
    container_name: spark-master
    hostname: spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"    # Porta para comunicação entre master e workers
      - "8080:8080"    # Porta para a interface web do Spark Master
    command: >
      bash -c "/opt/spark/sbin/start-master.sh && 
               tail -f /dev/null"

  spark-worker-1:
    build: .
    container_name: spark-worker-1
    hostname: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    command: >
      bash -c "/opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
               tail -f /dev/null"

  spark-worker-2:
    build: .
    container_name: spark-worker-2
    hostname: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    command: >
      bash -c "/opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
               tail -f /dev/null"

  spark-worker-3:
    build: .
    container_name: spark-worker-3
    hostname: spark-worker-3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    depends_on:
      - spark-master
    command: >
      bash -c "/opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
               tail -f /dev/null"
  pyspark:
    build: .
    container_name: pyspark-container
    ports:
      - "8888:8888"  # Exponha a porta 8888 para o Jupyter
    volumes:
      - .:/app       # Monte o diretório atual no container
    command: ["jupyter", "notebook", "--ip=0.0.0.0", "--port=8888", "--no-browser", "--allow-root"]

